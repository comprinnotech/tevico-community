Provider: aws

CheckID: organizations_account_part_of_organizations

CheckTitle: Verify AWS Account Organization Membership and Status

CheckType:
  - Security and Compliance
  - Governance
  - Logging and Monitoring

ServiceName: organizations

SubServiceName: "organization"

ResourceIdTemplate: arn:aws:organizations::${AccountId}:organization/${OrganizationId}

Severity: high

ResourceType: AwsOrganizationsOrganization

Description: |
  This check performs a comprehensive verification of AWS Organizations integration:
  - Validates if the AWS account is part of an AWS Organization
  - Confirms the organization status is active
  - Verifies proper access permissions
  - Validates organization feature set configuration
  - Ensures master account relationship is established

Risk: |
  Not being part of AWS Organizations or having improper configuration poses several risks:
  - Lack of centralized security policy enforcement
  - Inability to implement consistent compliance controls
  - Missing consolidated billing benefits
  - Limited ability to implement cross-account security measures
  - Reduced capability for centralized resource management
  - Increased operational overhead managing accounts individually
  - Higher risk of security misconfigurations
  - Difficulty in maintaining regulatory compliance across accounts

RelatedUrl: https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_details.html

Remediation:
  Code:
    CLI: |
      # Create new organization
      aws organizations create-organization --feature-set ALL
      
      # Check organization status
      aws organizations describe-organization
      
      # Enable service access
      aws organizations enable-aws-service-access --service-principal organizations.amazonaws.com
    NativeIaC: |
      # AWS CloudFormation
      Resources:
        AWSOrganization:
          Type: AWS::Organizations::Organization
          Properties:
            FeatureSet: ALL
    Terraform: |
      resource "aws_organizations_organization" "org" {
        feature_set = "ALL"
        aws_service_access_principals = ["organizations.amazonaws.com"]
      }
    Other: |
      # Python using boto3
      import boto3
      client = boto3.client('organizations')
      response = client.create_organization(FeatureSet='ALL')
  Recommendation:
    Text: |
      1. Ensure proper IAM permissions are configured
      2. Create or join an AWS Organization with ALL feature set
      3. Configure service control policies (SCPs)
      4. Enable trusted access for required AWS services
      5. Implement proper organizational unit (OU) structure
      6. Set up consolidated billing
      7. Configure organization-wide policies
    Url: https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started.html

Categories:
  - security
  - governance
  - cost-optimization
  - operational-excellence

DependsOn:
  - iam_permissions_check
  - organization_scp_enabled

RelatedTo:
  - organizations_scp_attached
  - organizations_trusted_access_enabled
  - organizations_feature_set_all

Notes: |
  Critical Infrastructure Component
  - Required for implementing organization-wide security controls
  - Essential for multi-account management
  - Key for implementing the AWS Well-Architected Framework
  - Fundamental for AWS Control Tower implementation
  - Necessary for centralized logging and monitoring

RequiredPermissions:
  - organizations:DescribeOrganization
  - organizations:ListAccounts
  - organizations:ListRoots

ErrorHandling:
  - AccessDeniedException: Verify IAM permissions
  - AWSOrganizationsNotInUseException: Create or join organization
  - ServiceException: Retry with exponential backoff
  - TooManyRequestsException: Implement rate limiting
  - ValidationException: Verify organization configuration
